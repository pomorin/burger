{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","loading","Spinner","order","components_Order_Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,iJCmCHA,EAhCD,SAACC,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KACV,CACEC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKhC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACvC,OAAOC,EAAAC,EAAAC,cAAA,QACLC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKV,EAAGJ,MAAOI,EAAGJ,KARb,KAQqBI,EAAGH,OARxB,OAUT,OACEI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQrB,OACtBU,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,kBAAUU,WAAWrB,EAAMsB,OAAOC,QAAQ,uCCrBpDC,8LAGFC,KAAKzB,MAAM0B,cAAcD,KAAKzB,MAAM2B,MAAOF,KAAKzB,MAAM4B,yCAItD,IAAIC,EAAUJ,KAAKzB,MAAM8B,QAOrBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MANFN,KAAKzB,MAAM6B,OAAOtB,IAAI,SAAAyB,GAAK,OACzBvB,EAAAC,EAAAC,cAACsB,EAAD,CACEf,IAAKc,EAAME,GACXjC,YAAa+B,EAAM/B,YACnBqB,OAAQU,EAAMV,UAGpB,OACEb,EAAAC,EAAAC,cAAA,WACGkB,UAjBYM,aAsCNC,sBAfS,SAAAC,GACtB,MAAO,CACLR,OAAQQ,EAAML,MAAMH,OACpBC,QAASO,EAAML,MAAMF,QACrBH,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,SAII,SAAAW,GACzB,MAAO,CACLb,cAAe,SAACC,EAAOC,GAAR,OAAmBW,EAASC,IAAoBb,EAAOC,OAI3DQ,CAA6CK,YAAiBjB,EAAQkB","file":"static/js/5.5713497b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};","import React from 'react';\r\n\r\nimport classes from './Order.css';\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push(\r\n      {\r\n        name: ingredientName,\r\n        amount: props.ingredients[ingredientName]\r\n      }\r\n    );\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(ig => {\r\n    return <span \r\n      style={{\r\n        textTransform: 'capitalize',\r\n        display: 'inline-block',\r\n        margin: '0 8px',\r\n        border: '1px solid #ccc',\r\n        padding: '5px'\r\n        }}\r\n      key={ig.name}>{ig.name} ({ig.amount})</span>\r\n  })\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>Price: <strong>${parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = !this.props.loading ? (\r\n      this.props.orders.map(order => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={+order.price} />\r\n      ))\r\n    ) : <Spinner />\r\n    return (\r\n      <div>\r\n        {orders}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}