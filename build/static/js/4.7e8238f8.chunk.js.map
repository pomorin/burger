{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","shared/utility.js","containers/Auth/Auth.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","Auth","state","controls","email","type","placeholder","validation","valid","password","isSignup","inputChangedHandler","event","controlName","updatedControls","C_Websites_react_max_burger_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_this","C_Websites_react_max_burger_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","setState","submitHandler","preventDefault","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","formElementsArray","id","config","form","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_12__","formElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_10__","errorMessage","error","message","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_11__","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","actions"],"mappings":"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","file":"static/js/4.7e8238f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case ('input'):\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n      break;\r\n    case ('textarea'):\r\n      inputElement = <textarea\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n      break;\r\n    case ('select'):\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(' ')}\r\n          value={props.value}\r\n          onChange={props.changed}>\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    isValid = value.trim() !== '' && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid\r\n  }\r\n\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid\r\n  }\r\n\r\n  return isValid;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__1TInt\"};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { checkValidity } from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Mail Address'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'password',\r\n          placeholder: 'Password'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    isSignup: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n      this.props.onSetAuthRedirectPath();\r\n    }\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n        touched: true\r\n      }\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup)\r\n  }\r\n\r\n  switchAuthModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return { isSignup: !prevState.isSignup }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n\r\n\r\n\r\n    let form = !this.props.loading ? formElementsArray.map(formElement => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.elementConfig.value}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n    )) : <Spinner />;\r\n\r\n    let errorMessage = this.props.error ? (\r\n      <p>{this.props.error.message}</p>\r\n    ) : null;\r\n\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Auth}>\r\n        {authRedirect}\r\n        {errorMessage}\r\n        <form onSubmit={this.submitHandler}>\r\n          {form}\r\n          <Button btnType=\"Success\">SUBMIT</Button>\r\n        </form>\r\n        <Button\r\n          btnType=\"Danger\"\r\n          clicked={this.switchAuthModeHandler}>SWITCH {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingBurger: state.burgerBuilder.building,\r\n    authRedirectPath: state.auth.authRedirectPath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);"],"sourceRoot":""}