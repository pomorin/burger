{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","shared/utility.js","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","CheckoutSummary","ContactData","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","type","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","inputChangedHandler","event","inputIdentifier","updatedOrderForm","objectSpread","_this","updatedFormElement","target","setState","orderHandler","preventDefault","formData","formElementIdentifier","order","ings","price","orderData","userId","onOrderBurger","token","_this2","this","formElementsArray","id","config","form","loading","Spinner","onSubmit","formElement","disabled","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","purchasedRedirect","purchased","Redirect","to","Order_CheckoutSummary_CheckoutSummary","Route","path","concat","match","component"],"mappings":"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","file":"static/js/3.b0a4e905.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case ('input'):\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n      break;\r\n    case ('textarea'):\r\n      inputElement = <textarea\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n      break;\r\n    case ('select'):\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(' ')}\r\n          value={props.value}\r\n          onChange={props.changed}>\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    isValid = value.trim() !== '' && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid\r\n  }\r\n\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid\r\n  }\r\n\r\n  return isValid;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__-avOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\"};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes Good!</h1>\r\n      <div style={{width: '100%', margin: 'auto'}}>\r\n        <Burger ingredients={props.ingredients}/>\r\n      </div>\r\n      <Button \r\n        btnType=\"Danger\" \r\n        clicked={props.checkoutCancelled}>CANCEL</Button>\r\n      <Button \r\n        btnType=\"Success\" \r\n        clicked={props.checkoutContinued}>CONTINUE</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { checkValidity } from '../../../shared/utility';\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: 'Pierrot',\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'ZIP'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 7\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your Email'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest' },\r\n            { value: 'cheapest', displayValue: 'Cheapest' }\r\n          ]\r\n        },\r\n        value: 'fastest',\r\n        validation: {},\r\n        valid: true\r\n      },\r\n    },\r\n    formIsValid: false\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm\r\n    };\r\n    const updatedFormElement = {\r\n      ...updatedOrderForm[inputIdentifier]\r\n    };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n    \r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {  \r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid })\r\n  }\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId\r\n    }\r\n\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  }\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n    let form = !this.props.loading ? (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(formElement => (\r\n\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.elementConfig.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ))}\r\n\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n      </form>\r\n    ) : <Spinner />\r\n\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n  }; \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\n\r\nclass Checkout extends Component {\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data');\r\n  }\r\n\r\n  render() {\r\n    const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n    const summary = this.props.ings ? (\r\n      <div>\r\n        {purchasedRedirect}\r\n        <CheckoutSummary\r\n          ingredients={this.props.ings}\r\n          checkoutCancelled={this.checkoutCancelledHandler}\r\n          checkoutContinued={this.checkoutContinuedHandler} />\r\n        <Route\r\n          path={`${this.props.match.path}/contact-data`}\r\n          component={ContactData} />\r\n      </div>\r\n    ) : (<Redirect to=\"/\" />);\r\n    return summary;  \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);"],"sourceRoot":""}